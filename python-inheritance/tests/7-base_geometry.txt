# 7-is_same_class.py
# Matthew Ernst 6628@holbertonstudents.com

==============================
integer_validator(self, name, value)
==============================

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> BG = BaseGeometry()

=====Successful Functions=====

--------Regular--------

>>> BG.integer_validator(11, 12)


>>> BG.integer_validator("notaninteger!", 12)



=====UnSuccessfull=====

------Value is not an integer------

>>> BG.integer_validator("notaninteger!", "notaninteger!")
Traceback (most recent call last):
TypeError: notaninteger! must be an integer

------not enough args------

>>> BG.integer_validator()
Traceback (most recent call last):
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'

------Value is missing------

>>> BG.integer_validator(None)
Traceback (most recent call last):
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

------Value is <= 0------

>>> BG.integer_validator(-11, -12)
Traceback (most recent call last):
ValueError: -11 must be greater than 0

------Area------

>>> BG.area()
Traceback (most recent call last):
Exception: area() is not implemented

------T or F------

>>> BG.integer_validator("age", False)
Traceback (most recent call last):
TypeError: age must be an integer

------Tuple------

>>> BG.integer_validator("notaninteger", {8, 9})
Traceback (most recent call last):
TypeError: notaninteger must be an integer

=====End=====